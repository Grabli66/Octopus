// Generated by Haxe 4.0.0-preview.5+7eb789f
#ifndef INCLUDED_octopus_NodeCollectionIterator
#define INCLUDED_octopus_NodeCollectionIterator

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(octopus,HtmlNode)
HX_DECLARE_CLASS1(octopus,NodeCollection)
HX_DECLARE_CLASS1(octopus,NodeCollectionIterator)

namespace octopus{


class HXCPP_CLASS_ATTRIBUTES NodeCollectionIterator_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef NodeCollectionIterator_obj OBJ_;
		NodeCollectionIterator_obj();

	public:
		enum { _hx_ClassId = 0x13db678d };

		void __construct( ::octopus::NodeCollection collection);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="octopus.NodeCollectionIterator")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"octopus.NodeCollectionIterator"); }
		static hx::ObjectPtr< NodeCollectionIterator_obj > __new( ::octopus::NodeCollection collection);
		static hx::ObjectPtr< NodeCollectionIterator_obj > __alloc(hx::Ctx *_hx_ctx, ::octopus::NodeCollection collection);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~NodeCollectionIterator_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("NodeCollectionIterator",2e,ed,18,b0); }

		 ::octopus::NodeCollection collection;
		int currentPos;
		bool hasNext();
		::Dynamic hasNext_dyn();

		 ::octopus::HtmlNode next();
		::Dynamic next_dyn();

};

} // end namespace octopus

#endif /* INCLUDED_octopus_NodeCollectionIterator */ 
