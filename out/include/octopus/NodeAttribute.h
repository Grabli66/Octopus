// Generated by Haxe 4.0.0-preview.5+7eb789f
#ifndef INCLUDED_octopus_NodeAttribute
#define INCLUDED_octopus_NodeAttribute

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_a524558151a8a5a0
#define INCLUDED_a524558151a8a5a0
#include "myhtml/myhtml.h"
#endif
HX_DECLARE_CLASS1(octopus,NodeAttribute)

namespace octopus{


class HXCPP_CLASS_ATTRIBUTES NodeAttribute_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef NodeAttribute_obj OBJ_;
		NodeAttribute_obj();

	public:
		enum { _hx_ClassId = 0x393f931b };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="octopus.NodeAttribute")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"octopus.NodeAttribute"); }
		static hx::ObjectPtr< NodeAttribute_obj > __new();
		static hx::ObjectPtr< NodeAttribute_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~NodeAttribute_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("NodeAttribute",9a,45,ad,93); }

		static  ::octopus::NodeAttribute fromNative( myhtml_tree_attr_t* native);

		 myhtml_tree_attr_t* nativeAttribute;
		::String get_value();
		::Dynamic get_value_dyn();

};

} // end namespace octopus

#endif /* INCLUDED_octopus_NodeAttribute */ 
