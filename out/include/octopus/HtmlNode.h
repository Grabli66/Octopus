// Generated by Haxe 4.0.0-preview.5+7eb789f
#ifndef INCLUDED_octopus_HtmlNode
#define INCLUDED_octopus_HtmlNode

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_a524558151a8a5a0
#define INCLUDED_a524558151a8a5a0
#include "myhtml/myhtml.h"
#endif
HX_DECLARE_CLASS1(octopus,HtmlNode)
HX_DECLARE_CLASS1(octopus,HtmlTree)
HX_DECLARE_CLASS1(octopus,NodeCollection)

namespace octopus{


class HXCPP_CLASS_ATTRIBUTES HtmlNode_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef HtmlNode_obj OBJ_;
		HtmlNode_obj();

	public:
		enum { _hx_ClassId = 0x70acbb4c };

		void __construct( ::octopus::HtmlTree tree);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="octopus.HtmlNode")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"octopus.HtmlNode"); }
		static hx::ObjectPtr< HtmlNode_obj > __new( ::octopus::HtmlTree tree);
		static hx::ObjectPtr< HtmlNode_obj > __alloc(hx::Ctx *_hx_ctx, ::octopus::HtmlTree tree);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~HtmlNode_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("HtmlNode",2d,19,fa,e5); }

		static  ::octopus::HtmlNode fromNative( myhtml_tree_node_t* native, ::octopus::HtmlTree tree);

		 myhtml_tree_node_t* nativeNode;
		 ::octopus::HtmlTree tree;
		 myhtml_tag_id_t get_tagId();

		::String get_tagName();
		::Dynamic get_tagName_dyn();

		::String get_text();
		::Dynamic get_text_dyn();

		 ::octopus::HtmlNode get_child();
		::Dynamic get_child_dyn();

		 ::octopus::HtmlNode get_lastChild();
		::Dynamic get_lastChild_dyn();

		 ::octopus::HtmlNode get_next();
		::Dynamic get_next_dyn();

		 ::octopus::HtmlNode get_prev();
		::Dynamic get_prev_dyn();

		 ::Dynamic get_childs();
		::Dynamic get_childs_dyn();

		 ::Dynamic get_nodes();
		::Dynamic get_nodes_dyn();

		::String getAttributeValue(::String key);
		::Dynamic getAttributeValue_dyn();

		::String getInnerText(::String delimiter);
		::Dynamic getInnerText_dyn();

		 ::octopus::NodeCollection getNodesByTagId( myhtml_tag_id_t tagId);

		 ::octopus::NodeCollection getNodesByTagName(::String name);
		::Dynamic getNodesByTagName_dyn();

		 ::octopus::NodeCollection findByCss(::String selectors);
		::Dynamic findByCss_dyn();

};

} // end namespace octopus

#endif /* INCLUDED_octopus_HtmlNode */ 
