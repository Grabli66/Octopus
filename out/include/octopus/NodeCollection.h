// Generated by Haxe 4.0.0-preview.5+7eb789f
#ifndef INCLUDED_octopus_NodeCollection
#define INCLUDED_octopus_NodeCollection

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_a524558151a8a5a0
#define INCLUDED_a524558151a8a5a0
#include "myhtml/myhtml.h"
#endif
HX_DECLARE_CLASS1(octopus,HtmlNode)
HX_DECLARE_CLASS1(octopus,HtmlTree)
HX_DECLARE_CLASS1(octopus,NodeCollection)

namespace octopus{


class HXCPP_CLASS_ATTRIBUTES NodeCollection_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef NodeCollection_obj OBJ_;
		NodeCollection_obj();

	public:
		enum { _hx_ClassId = 0x76724a7f };

		void __construct( ::octopus::HtmlTree tree);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="octopus.NodeCollection")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"octopus.NodeCollection"); }
		static hx::ObjectPtr< NodeCollection_obj > __new( ::octopus::HtmlTree tree);
		static hx::ObjectPtr< NodeCollection_obj > __alloc(hx::Ctx *_hx_ctx, ::octopus::HtmlTree tree);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~NodeCollection_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("NodeCollection",20,c7,00,3c); }

		static  ::octopus::NodeCollection fromNative(::cpp::Pointer<  myhtml_collection_t > native, ::octopus::HtmlTree tree);
		static ::Dynamic fromNative_dyn();

		::cpp::Pointer<  myhtml_collection_t > nativeCollection;
		 ::octopus::HtmlTree tree;
		int length;
		int get_length();
		::Dynamic get_length_dyn();

		 ::octopus::HtmlNode get(int idx);
		::Dynamic get_dyn();

		 ::Dynamic iterator();
		::Dynamic iterator_dyn();

};

} // end namespace octopus

#endif /* INCLUDED_octopus_NodeCollection */ 
