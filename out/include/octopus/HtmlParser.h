// Generated by Haxe 4.0.0-preview.5+7eb789f
#ifndef INCLUDED_octopus_HtmlParser
#define INCLUDED_octopus_HtmlParser

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(octopus,HtmlParser)
HX_DECLARE_CLASS1(octopus,HtmlTree)

namespace octopus{


class HXCPP_CLASS_ATTRIBUTES HtmlParser_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef HtmlParser_obj OBJ_;
		HtmlParser_obj();

	public:
		enum { _hx_ClassId = 0x4831b4a9 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="octopus.HtmlParser")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"octopus.HtmlParser"); }
		static hx::ObjectPtr< HtmlParser_obj > __new();
		static hx::ObjectPtr< HtmlParser_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~HtmlParser_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("HtmlParser",ca,0c,fb,b1); }

		 ::octopus::HtmlTree parse(::String text);
		::Dynamic parse_dyn();

};

} // end namespace octopus

#endif /* INCLUDED_octopus_HtmlParser */ 
