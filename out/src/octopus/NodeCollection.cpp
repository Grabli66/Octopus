// Generated by Haxe 4.0.0-preview.5+7eb789f
#include <hxcpp.h>

#ifndef INCLUDED_a524558151a8a5a0
#define INCLUDED_a524558151a8a5a0
#include "myhtml/myhtml.h"
#endif
#ifndef INCLUDED_octopus_HtmlNode
#include <octopus/HtmlNode.h>
#endif
#ifndef INCLUDED_octopus_HtmlTree
#include <octopus/HtmlTree.h>
#endif
#ifndef INCLUDED_octopus_NodeCollection
#include <octopus/NodeCollection.h>
#endif
#ifndef INCLUDED_octopus_NodeCollectionIterator
#include <octopus/NodeCollectionIterator.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_913b6db732c7ef07_81_new,"octopus.NodeCollection","new",0x15ab0881,"octopus.NodeCollection.new","octopus/NodeCollection.hx",81,0x499730ee)
HX_LOCAL_STACK_FRAME(_hx_pos_913b6db732c7ef07_63_get_length,"octopus.NodeCollection","get_length",0x4b8f82ae,"octopus.NodeCollection.get_length","octopus/NodeCollection.hx",63,0x499730ee)
HX_LOCAL_STACK_FRAME(_hx_pos_913b6db732c7ef07_87_get,"octopus.NodeCollection","get",0x15a5b8b7,"octopus.NodeCollection.get","octopus/NodeCollection.hx",87,0x499730ee)
HX_LOCAL_STACK_FRAME(_hx_pos_913b6db732c7ef07_100_iterator,"octopus.NodeCollection","iterator",0xf0defa2d,"octopus.NodeCollection.iterator","octopus/NodeCollection.hx",100,0x499730ee)
HX_LOCAL_STACK_FRAME(_hx_pos_913b6db732c7ef07_71_fromNative,"octopus.NodeCollection","fromNative",0x21614ca0,"octopus.NodeCollection.fromNative","octopus/NodeCollection.hx",71,0x499730ee)
namespace octopus{

void NodeCollection_obj::__construct( ::octopus::HtmlTree tree){
            	HX_STACKFRAME(&_hx_pos_913b6db732c7ef07_81_new)
HXDLIN(  81)		this->tree = tree;
            	}

Dynamic NodeCollection_obj::__CreateEmpty() { return new NodeCollection_obj; }

void *NodeCollection_obj::_hx_vtable = 0;

Dynamic NodeCollection_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< NodeCollection_obj > _hx_result = new NodeCollection_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool NodeCollection_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x76724a7f;
}

int NodeCollection_obj::get_length(){
            	HX_STACKFRAME(&_hx_pos_913b6db732c7ef07_63_get_length)
HXDLIN(  63)		return this->nativeCollection->ptr->length;
            	}


HX_DEFINE_DYNAMIC_FUNC0(NodeCollection_obj,get_length,return )

 ::octopus::HtmlNode NodeCollection_obj::get(int idx){
            	HX_STACKFRAME(&_hx_pos_913b6db732c7ef07_87_get)
HXLINE(  88)		 myhtml_tree_node_t* native = this->nativeCollection->ptr->list[idx];
HXLINE(  89)		if (hx::IsNull( native )) {
HXLINE(  90)			return null();
            		}
HXLINE(  91)		 ::octopus::HtmlNode res = ::octopus::HtmlNode_obj::fromNative(native,this->tree);
HXLINE(  92)		return res;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NodeCollection_obj,get,return )

 ::Dynamic NodeCollection_obj::iterator(){
            	HX_GC_STACKFRAME(&_hx_pos_913b6db732c7ef07_100_iterator)
HXDLIN( 100)		return  ::octopus::NodeCollectionIterator_obj::__alloc( HX_CTX ,hx::ObjectPtr<OBJ_>(this));
            	}


HX_DEFINE_DYNAMIC_FUNC0(NodeCollection_obj,iterator,return )

 ::octopus::NodeCollection NodeCollection_obj::fromNative(::cpp::Pointer<  myhtml_collection_t > native, ::octopus::HtmlTree tree){
            	HX_GC_STACKFRAME(&_hx_pos_913b6db732c7ef07_71_fromNative)
HXLINE(  72)		 ::octopus::NodeCollection res =  ::octopus::NodeCollection_obj::__alloc( HX_CTX ,tree);
HXLINE(  73)		res->nativeCollection = native;
HXLINE(  74)		return res;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NodeCollection_obj,fromNative,return )


hx::ObjectPtr< NodeCollection_obj > NodeCollection_obj::__new( ::octopus::HtmlTree tree) {
	hx::ObjectPtr< NodeCollection_obj > __this = new NodeCollection_obj();
	__this->__construct(tree);
	return __this;
}

hx::ObjectPtr< NodeCollection_obj > NodeCollection_obj::__alloc(hx::Ctx *_hx_ctx, ::octopus::HtmlTree tree) {
	NodeCollection_obj *__this = (NodeCollection_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(NodeCollection_obj), true, "octopus.NodeCollection"));
	*(void **)__this = NodeCollection_obj::_hx_vtable;
	__this->__construct(tree);
	return __this;
}

NodeCollection_obj::NodeCollection_obj()
{
}

void NodeCollection_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(NodeCollection);
	HX_MARK_MEMBER_NAME(nativeCollection,"nativeCollection");
	HX_MARK_MEMBER_NAME(tree,"tree");
	HX_MARK_MEMBER_NAME(length,"length");
	HX_MARK_END_CLASS();
}

void NodeCollection_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(nativeCollection,"nativeCollection");
	HX_VISIT_MEMBER_NAME(tree,"tree");
	HX_VISIT_MEMBER_NAME(length,"length");
}

hx::Val NodeCollection_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { return hx::Val( get_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"tree") ) { return hx::Val( tree ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { return hx::Val( inCallProp == hx::paccAlways ? get_length() : length ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"iterator") ) { return hx::Val( iterator_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_length") ) { return hx::Val( get_length_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"nativeCollection") ) { return hx::Val( nativeCollection ); }
	}
	return super::__Field(inName,inCallProp);
}

bool NodeCollection_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"fromNative") ) { outValue = fromNative_dyn(); return true; }
	}
	return false;
}

hx::Val NodeCollection_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"tree") ) { tree=inValue.Cast<  ::octopus::HtmlTree >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { length=inValue.Cast< int >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"nativeCollection") ) { nativeCollection=inValue.Cast< ::cpp::Pointer<  myhtml_collection_t > >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void NodeCollection_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("nativeCollection",d5,1e,b7,28));
	outFields->push(HX_("tree",5e,99,03,4d));
	outFields->push(HX_("length",e6,94,07,9f));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo NodeCollection_obj_sMemberStorageInfo[] = {
	{hx::fsUnknown /* ::cpp::Pointer<  myhtml_collection_t > */ ,(int)offsetof(NodeCollection_obj,nativeCollection),HX_("nativeCollection",d5,1e,b7,28)},
	{hx::fsObject /*  ::octopus::HtmlTree */ ,(int)offsetof(NodeCollection_obj,tree),HX_("tree",5e,99,03,4d)},
	{hx::fsInt,(int)offsetof(NodeCollection_obj,length),HX_("length",e6,94,07,9f)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *NodeCollection_obj_sStaticStorageInfo = 0;
#endif

static ::String NodeCollection_obj_sMemberFields[] = {
	HX_("nativeCollection",d5,1e,b7,28),
	HX_("tree",5e,99,03,4d),
	HX_("length",e6,94,07,9f),
	HX_("get_length",af,04,8f,8f),
	HX_("get",96,80,4e,00),
	HX_("iterator",ee,49,9a,93),
	::String(null()) };

hx::Class NodeCollection_obj::__mClass;

static ::String NodeCollection_obj_sStaticFields[] = {
	HX_("fromNative",a1,ce,60,65),
	::String(null())
};

void NodeCollection_obj::__register()
{
	NodeCollection_obj _hx_dummy;
	NodeCollection_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("octopus.NodeCollection",0f,b4,82,ca);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &NodeCollection_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(NodeCollection_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(NodeCollection_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< NodeCollection_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = NodeCollection_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = NodeCollection_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace octopus
