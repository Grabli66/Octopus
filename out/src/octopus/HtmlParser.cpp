// Generated by Haxe 4.0.0-preview.5+7eb789f
#include <hxcpp.h>

#ifndef INCLUDED_a524558151a8a5a0
#define INCLUDED_a524558151a8a5a0
#include "myhtml/myhtml.h"
#endif
#ifndef INCLUDED_octopus_HtmlParser
#include <octopus/HtmlParser.h>
#endif
#ifndef INCLUDED_octopus_HtmlTree
#include <octopus/HtmlTree.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_98c3a16357094084_12_new,"octopus.HtmlParser","new",0x969fc7ab,"octopus.HtmlParser.new","octopus/HtmlParser.hx",12,0x55256984)
HX_LOCAL_STACK_FRAME(_hx_pos_98c3a16357094084_18_parse,"octopus.HtmlParser","parse",0x7806303e,"octopus.HtmlParser.parse","octopus/HtmlParser.hx",18,0x55256984)
namespace octopus{

void HtmlParser_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_98c3a16357094084_12_new)
            	}

Dynamic HtmlParser_obj::__CreateEmpty() { return new HtmlParser_obj; }

void *HtmlParser_obj::_hx_vtable = 0;

Dynamic HtmlParser_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< HtmlParser_obj > _hx_result = new HtmlParser_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool HtmlParser_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4831b4a9;
}

 ::octopus::HtmlTree HtmlParser_obj::parse(::String text){
            	HX_STACKFRAME(&_hx_pos_98c3a16357094084_18_parse)
HXLINE(  20)		 myhtml_t* myhtml = myhtml_create();
HXLINE(  21)		 mystatus_t status = myhtml_init(myhtml,MyHTML_OPTIONS_DEFAULT,1,0);
HXLINE(  22)		 myhtml_tree_t* tree = myhtml_tree_create();
HXLINE(  23)		status = myhtml_tree_init(tree,myhtml);
HXLINE(  24)		const char* this1 = text.__s;
HXDLIN(  24)		status = myhtml_parse(tree,MyENCODING_UTF_8,this1,text.length);
HXLINE(  25)		return ::octopus::HtmlTree_obj::fromNative(tree);
            	}


HX_DEFINE_DYNAMIC_FUNC1(HtmlParser_obj,parse,return )


hx::ObjectPtr< HtmlParser_obj > HtmlParser_obj::__new() {
	hx::ObjectPtr< HtmlParser_obj > __this = new HtmlParser_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< HtmlParser_obj > HtmlParser_obj::__alloc(hx::Ctx *_hx_ctx) {
	HtmlParser_obj *__this = (HtmlParser_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(HtmlParser_obj), false, "octopus.HtmlParser"));
	*(void **)__this = HtmlParser_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

HtmlParser_obj::HtmlParser_obj()
{
}

hx::Val HtmlParser_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"parse") ) { return hx::Val( parse_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *HtmlParser_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *HtmlParser_obj_sStaticStorageInfo = 0;
#endif

static ::String HtmlParser_obj_sMemberFields[] = {
	HX_("parse",33,90,55,bd),
	::String(null()) };

hx::Class HtmlParser_obj::__mClass;

void HtmlParser_obj::__register()
{
	HtmlParser_obj _hx_dummy;
	HtmlParser_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("octopus.HtmlParser",39,16,4a,e8);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(HtmlParser_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< HtmlParser_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = HtmlParser_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = HtmlParser_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace octopus
