// Generated by Haxe 4.0.0-preview.5+7eb789f
#include <hxcpp.h>

#ifndef INCLUDED_a524558151a8a5a0
#define INCLUDED_a524558151a8a5a0
#include "myhtml/myhtml.h"
#endif
#ifndef INCLUDED_octopus_HtmlNode
#include <octopus/HtmlNode.h>
#endif
#ifndef INCLUDED_octopus_HtmlTree
#include <octopus/HtmlTree.h>
#endif
#ifndef INCLUDED_octopus_NodeCollection
#include <octopus/NodeCollection.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_b3ec5e448f7f0999_41_new,"octopus.HtmlTree","new",0x60c0452a,"octopus.HtmlTree.new","octopus/HtmlTree.hx",41,0x870f7b25)
HX_LOCAL_STACK_FRAME(_hx_pos_b3ec5e448f7f0999_23_get_htmlNode,"octopus.HtmlTree","get_htmlNode",0x6c89b30c,"octopus.HtmlTree.get_htmlNode","octopus/HtmlTree.hx",23,0x870f7b25)
HX_LOCAL_STACK_FRAME(_hx_pos_b3ec5e448f7f0999_48_getTagIdByName,"octopus.HtmlTree","getTagIdByName",0xf633b0f7,"octopus.HtmlTree.getTagIdByName","octopus/HtmlTree.hx",48,0x870f7b25)
HX_LOCAL_STACK_FRAME(_hx_pos_b3ec5e448f7f0999_59_getNodesByTagId,"octopus.HtmlTree","getNodesByTagId",0x98940ccd,"octopus.HtmlTree.getNodesByTagId","octopus/HtmlTree.hx",59,0x870f7b25)
HX_LOCAL_STACK_FRAME(_hx_pos_b3ec5e448f7f0999_68_getNodesByTagName,"octopus.HtmlTree","getNodesByTagName",0xf296c3bd,"octopus.HtmlTree.getNodesByTagName","octopus/HtmlTree.hx",68,0x870f7b25)
HX_LOCAL_STACK_FRAME(_hx_pos_b3ec5e448f7f0999_75_findByCss,"octopus.HtmlTree","findByCss",0xaf953f7d,"octopus.HtmlTree.findByCss","octopus/HtmlTree.hx",75,0x870f7b25)
HX_LOCAL_STACK_FRAME(_hx_pos_b3ec5e448f7f0999_32_fromNative,"octopus.HtmlTree","fromNative",0x27f8e717,"octopus.HtmlTree.fromNative","octopus/HtmlTree.hx",32,0x870f7b25)
namespace octopus{

void HtmlTree_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_b3ec5e448f7f0999_41_new)
            	}

Dynamic HtmlTree_obj::__CreateEmpty() { return new HtmlTree_obj; }

void *HtmlTree_obj::_hx_vtable = 0;

Dynamic HtmlTree_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< HtmlTree_obj > _hx_result = new HtmlTree_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool HtmlTree_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x74a64aa8;
}

 ::octopus::HtmlNode HtmlTree_obj::get_htmlNode(){
            	HX_STACKFRAME(&_hx_pos_b3ec5e448f7f0999_23_get_htmlNode)
HXLINE(  24)		 myhtml_tree_node_t* native = myhtml_tree_get_node_html(this->nativeTree);
HXLINE(  25)		return ::octopus::HtmlNode_obj::fromNative(native,hx::ObjectPtr<OBJ_>(this));
            	}


HX_DEFINE_DYNAMIC_FUNC0(HtmlTree_obj,get_htmlNode,return )

 myhtml_tag_id_t HtmlTree_obj::getTagIdByName(::String name){
            	HX_STACKFRAME(&_hx_pos_b3ec5e448f7f0999_48_getTagIdByName)
HXLINE(  49)		const char* this1 = name.__s;
HXDLIN(  49)		 myhtml_tag_id_t tagId = myhtml_tag_id_by_name(this->nativeTree,this1,( (size_t)(name.length) ));
HXLINE(  50)		return tagId;
            	}


 ::octopus::NodeCollection HtmlTree_obj::getNodesByTagId( myhtml_tag_id_t tagId){
            	HX_STACKFRAME(&_hx_pos_b3ec5e448f7f0999_59_getNodesByTagId)
HXDLIN(  59)		return this->get_htmlNode()->getNodesByTagId(tagId);
            	}


 ::octopus::NodeCollection HtmlTree_obj::getNodesByTagName(::String name){
            	HX_STACKFRAME(&_hx_pos_b3ec5e448f7f0999_68_getNodesByTagName)
HXDLIN(  68)		return this->get_htmlNode()->getNodesByTagName(name);
            	}


HX_DEFINE_DYNAMIC_FUNC1(HtmlTree_obj,getNodesByTagName,return )

 ::octopus::NodeCollection HtmlTree_obj::findByCss(::String selectors){
            	HX_STACKFRAME(&_hx_pos_b3ec5e448f7f0999_75_findByCss)
HXDLIN(  75)		return this->get_htmlNode()->findByCss(selectors);
            	}


HX_DEFINE_DYNAMIC_FUNC1(HtmlTree_obj,findByCss,return )

 ::octopus::HtmlTree HtmlTree_obj::fromNative( myhtml_tree_t* native){
            	HX_GC_STACKFRAME(&_hx_pos_b3ec5e448f7f0999_32_fromNative)
HXLINE(  33)		 ::octopus::HtmlTree res =  ::octopus::HtmlTree_obj::__alloc( HX_CTX );
HXLINE(  34)		res->nativeTree = native;
HXLINE(  35)		return res;
            	}



hx::ObjectPtr< HtmlTree_obj > HtmlTree_obj::__new() {
	hx::ObjectPtr< HtmlTree_obj > __this = new HtmlTree_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< HtmlTree_obj > HtmlTree_obj::__alloc(hx::Ctx *_hx_ctx) {
	HtmlTree_obj *__this = (HtmlTree_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(HtmlTree_obj), true, "octopus.HtmlTree"));
	*(void **)__this = HtmlTree_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

HtmlTree_obj::HtmlTree_obj()
{
}

void HtmlTree_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(HtmlTree);
	HX_MARK_MEMBER_NAME(nativeTree,"nativeTree");
	HX_MARK_END_CLASS();
}

void HtmlTree_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(nativeTree,"nativeTree");
}

hx::Val HtmlTree_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"htmlNode") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_htmlNode() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"findByCss") ) { return hx::Val( findByCss_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"get_htmlNode") ) { return hx::Val( get_htmlNode_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"getNodesByTagName") ) { return hx::Val( getNodesByTagName_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

void HtmlTree_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("nativeTree",95,a6,13,14));
	outFields->push(HX_("htmlNode",0d,5d,48,0c));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo HtmlTree_obj_sMemberStorageInfo[] = {
	{hx::fsUnknown /*  myhtml_tree_t* */ ,(int)offsetof(HtmlTree_obj,nativeTree),HX_("nativeTree",95,a6,13,14)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *HtmlTree_obj_sStaticStorageInfo = 0;
#endif

static ::String HtmlTree_obj_sMemberFields[] = {
	HX_("get_htmlNode",16,11,62,c1),
	HX_("getNodesByTagName",73,41,3b,9a),
	HX_("findByCss",33,17,6a,ac),
	::String(null()) };

hx::Class HtmlTree_obj::__mClass;

void HtmlTree_obj::__register()
{
	HtmlTree_obj _hx_dummy;
	HtmlTree_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("octopus.HtmlTree",38,28,60,4c);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(HtmlTree_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< HtmlTree_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = HtmlTree_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = HtmlTree_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace octopus
