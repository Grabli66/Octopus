// Generated by Haxe 4.0.0-preview.5+7eb789f
#include <hxcpp.h>

#ifndef INCLUDED_a524558151a8a5a0
#define INCLUDED_a524558151a8a5a0
#include "myhtml/myhtml.h"
#endif
#ifndef INCLUDED_octopus_HtmlNode
#include <octopus/HtmlNode.h>
#endif
#ifndef INCLUDED_octopus_HtmlTree
#include <octopus/HtmlTree.h>
#endif
#ifndef INCLUDED_octopus_NodeCollection
#include <octopus/NodeCollection.h>
#endif
#ifndef INCLUDED_octopus_NodeCollectionIterator
#include <octopus/NodeCollectionIterator.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_4f96e8675c5f9d6e_9_new,"octopus.NodeCollectionIterator","new",0x8d26d48f,"octopus.NodeCollectionIterator.new","octopus/NodeCollection.hx",9,0x499730ee)
HX_LOCAL_STACK_FRAME(_hx_pos_4f96e8675c5f9d6e_32_hasNext,"octopus.NodeCollectionIterator","hasNext",0xb4c0ed1c,"octopus.NodeCollectionIterator.hasNext","octopus/NodeCollection.hx",32,0x499730ee)
HX_LOCAL_STACK_FRAME(_hx_pos_4f96e8675c5f9d6e_39_next,"octopus.NodeCollectionIterator","next",0xf4d329e4,"octopus.NodeCollectionIterator.next","octopus/NodeCollection.hx",39,0x499730ee)
namespace octopus{

void NodeCollectionIterator_obj::__construct( ::octopus::NodeCollection collection){
            	HX_STACKFRAME(&_hx_pos_4f96e8675c5f9d6e_9_new)
HXLINE(  18)		this->currentPos = 0;
HXLINE(  25)		this->collection = collection;
            	}

Dynamic NodeCollectionIterator_obj::__CreateEmpty() { return new NodeCollectionIterator_obj; }

void *NodeCollectionIterator_obj::_hx_vtable = 0;

Dynamic NodeCollectionIterator_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< NodeCollectionIterator_obj > _hx_result = new NodeCollectionIterator_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool NodeCollectionIterator_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x13db678d;
}

bool NodeCollectionIterator_obj::hasNext(){
            	HX_STACKFRAME(&_hx_pos_4f96e8675c5f9d6e_32_hasNext)
HXDLIN(  32)		int _hx_tmp = this->currentPos;
HXDLIN(  32)		return (_hx_tmp < this->collection->get_length());
            	}


HX_DEFINE_DYNAMIC_FUNC0(NodeCollectionIterator_obj,hasNext,return )

 ::octopus::HtmlNode NodeCollectionIterator_obj::next(){
            	HX_STACKFRAME(&_hx_pos_4f96e8675c5f9d6e_39_next)
HXDLIN(  39)		 ::octopus::NodeCollection _this = this->collection;
HXDLIN(  39)		 myhtml_tree_node_t* native = _this->nativeCollection->ptr->list[this->currentPos++];
HXDLIN(  39)		if (hx::IsNull( native )) {
HXDLIN(  39)			return null();
            		}
            		else {
HXDLIN(  39)			 ::octopus::HtmlNode res = ::octopus::HtmlNode_obj::fromNative(native,_this->tree);
HXDLIN(  39)			return res;
            		}
HXDLIN(  39)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(NodeCollectionIterator_obj,next,return )


hx::ObjectPtr< NodeCollectionIterator_obj > NodeCollectionIterator_obj::__new( ::octopus::NodeCollection collection) {
	hx::ObjectPtr< NodeCollectionIterator_obj > __this = new NodeCollectionIterator_obj();
	__this->__construct(collection);
	return __this;
}

hx::ObjectPtr< NodeCollectionIterator_obj > NodeCollectionIterator_obj::__alloc(hx::Ctx *_hx_ctx, ::octopus::NodeCollection collection) {
	NodeCollectionIterator_obj *__this = (NodeCollectionIterator_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(NodeCollectionIterator_obj), true, "octopus.NodeCollectionIterator"));
	*(void **)__this = NodeCollectionIterator_obj::_hx_vtable;
	__this->__construct(collection);
	return __this;
}

NodeCollectionIterator_obj::NodeCollectionIterator_obj()
{
}

void NodeCollectionIterator_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(NodeCollectionIterator);
	HX_MARK_MEMBER_NAME(collection,"collection");
	HX_MARK_MEMBER_NAME(currentPos,"currentPos");
	HX_MARK_END_CLASS();
}

void NodeCollectionIterator_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(collection,"collection");
	HX_VISIT_MEMBER_NAME(currentPos,"currentPos");
}

hx::Val NodeCollectionIterator_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"next") ) { return hx::Val( next_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"hasNext") ) { return hx::Val( hasNext_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"collection") ) { return hx::Val( collection ); }
		if (HX_FIELD_EQ(inName,"currentPos") ) { return hx::Val( currentPos ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val NodeCollectionIterator_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"collection") ) { collection=inValue.Cast<  ::octopus::NodeCollection >(); return inValue; }
		if (HX_FIELD_EQ(inName,"currentPos") ) { currentPos=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void NodeCollectionIterator_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("collection",5e,ce,82,2f));
	outFields->push(HX_("currentPos",db,22,30,c7));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo NodeCollectionIterator_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::octopus::NodeCollection */ ,(int)offsetof(NodeCollectionIterator_obj,collection),HX_("collection",5e,ce,82,2f)},
	{hx::fsInt,(int)offsetof(NodeCollectionIterator_obj,currentPos),HX_("currentPos",db,22,30,c7)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *NodeCollectionIterator_obj_sStaticStorageInfo = 0;
#endif

static ::String NodeCollectionIterator_obj_sMemberFields[] = {
	HX_("collection",5e,ce,82,2f),
	HX_("currentPos",db,22,30,c7),
	HX_("hasNext",6d,a5,46,18),
	HX_("next",f3,84,02,49),
	::String(null()) };

hx::Class NodeCollectionIterator_obj::__mClass;

void NodeCollectionIterator_obj::__register()
{
	NodeCollectionIterator_obj _hx_dummy;
	NodeCollectionIterator_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("octopus.NodeCollectionIterator",1d,e1,c7,a3);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(NodeCollectionIterator_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< NodeCollectionIterator_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = NodeCollectionIterator_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = NodeCollectionIterator_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace octopus
